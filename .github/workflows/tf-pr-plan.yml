name: Deploy code to GCP

on:
  pull_request:
    branches: [ "main" ]
    paths:
      - 'tofu/**'
      - 'modules/**'
      - 'helm/**'


jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      fmt: ${{ steps.fmt.outputs.tofu_fmt_count }}
    permissions:
      id-token: write
      contents: read

    steps:
    - name: 'Checkout code'
      uses: 'actions/checkout@v4'
      with:
        fetch-depth: 0
        ref: ${{ github.head_ref }}
    
    - name: Set Up Opentofu
      uses: opentofu/setup-opentofu@v1

    - name: Check TofuFormatting 
      id: fmt
      run: |
        OUTPUT=$(find ./tofu -mindepth 1 -type d -exec tofu fmt -check {} \; | wc -l)
        echo "tofu_fmt_count=$OUTPUT" >> $GITHUB_ENV
      shell: bash

    - name: Check for Errors in Formatting Step
      if: steps.fmt.outputs.stderr != ''
      run: |
        echo "Formatting error detected: ${{ steps.fmt.outputs.stderr }}"
        exit 1
      shell: bash
    
    - name: Conditionally Run if Formatting Issues Exist
      id: fmt_plan
      if: steps.fmt.outputs.tofu_fmt_count > 0
      run: |
        echo "Formatting issues detected. Fixing..."
        find ./tofu -mindepth 1 -type d -exec tofu fmt {} \;
        echo "Formatting issues fixed."
      shell: bash
    
    - name: Commit Formatting Fixes
      if: steps.fmt.outputs.tofu_fmt_count > 0
      id: fix_fmt
      uses: EndBug/add-and-commit@v9
      with:
        author_name: 'WillbertoBot'
        author_email: 'bot@willberto.biz'
        committer_name: GitHub Actions
        committer_email: actions@github.com
        message: 'Fix formatting issues'
        add: 'tofu/**'

  tofu_plan:
    runs-on: ubuntu-latest
    needs: setup
    permissions:
      id-token: write
      contents: read
    if: ${{ needs.setup.outputs.fmt == 0 }}
    steps:
    - name: 'Checkout code'
      uses: 'actions/checkout@v4'
      with:
        fetch-depth: 0
        ref: ${{ github.head_ref }}

    ##- name: 'Setup OpenTofu and Lint'
    ##  id: tofu_plan
    ##  uses: './.github/actions/tofu_plan_lint'
    ##  with:
    ##    tofu_directory: './tofu'
    ##    tofuvars_location: './tofu/tofu.tf'