name: 'Setup OpenTofu and Lint'
description: 'A composite action to setup and run OpenTofu commands'

inputs:
  tofu_directory:
    description: 'The directory where OpenTofu files are located'
    required: true
    default: '.'
  # Note: Sensitive values should be passed via environment variables, not inputs
  # bucket_name is accessed via env.BUCKET_NAME instead

outputs:
  init:
    description: 'The result of the OpenTofu init command'
    value: ${{ steps.init.outputs.stdout }}
  validate:
    description: 'The result of the OpenTofu validate command'
    value: ${{ steps.validate.outputs.stdout }}

runs:
  using: 'composite'
  steps:
    - name: Set Up Opentofu
      uses: opentofu/setup-opentofu@v1

    - name: OpenTofu Init
      id: init
      working-directory: ${{ inputs.tofu_directory }}
      run: tofu init backend-config="bucket=${{ env.TF_VAR_tfstates_bucket }}" -input=false -no-color
      shell: bash
      continue-on-error: true # This allows the workflow to continue even if init fails

    - name: OpenTofu Validate
      id: validate
      working-directory: ${{ inputs.tofu_directory }}
      run: tofu validate backend-config="bucket=${{ env.TF_VAR_tfstates_bucket }}" -input=false -no-color
      shell: bash
      continue-on-error: true

    - name: OpenTofu PR Message
      uses: 'mshick/add-pr-comment@v2'
      if: ${{ steps.validate.outputs.stderr }} || ${{ steps.init.outputs.stderr}}
      with:
        refresh-message-position: true
        message-id: ${{ github.event.pull_request.id }}-VALIDATE
        message: |
          ### ⚠️ OpenTofu Validation Failed 🛠️
          There's some issues, homeboy!. Click below to view the details:
            <details>
            <summary>🔍 View OpenTofu Init Output</summary>

            ```
            ${{ steps.init.outputs.stdout }}
            ```

            </details>
            
            ${{ steps.init.outputs.stderr && format('<details>\n<summary>🔍 View OpenTofu Init Stderr</summary>\n\n```\n{0}\n```\n\n</details>', steps.init.outputs.stderr) }}

            <details>
            <summary>🔍 View OpenTofu Validate Output</summary>

            ```
            ${{ steps.validate.outputs.stdout }}
            ```

            </details>
            
            ${{ steps.validate.outputs.stderr && format('<details>\n<summary>🔍 View OpenTofu Validate Stderr</summary>\n\n```\n{0}\n```\n\n</details>', steps.validate.outputs.stderr) }}

          Keep trying, Kiddo! 🚀
        message-failure: |
          Errors detected in the OpenTofu plan step. Please check the logs for details.
    
    - name: OpenTofu Plan
      working-directory: ${{ inputs.tofu_directory }}
      id: plan
      run: tofu plan backend-config="bucket=${{ env.TF_VAR_tfstates_bucket }}" -input=false -lock=false -no-color
      shell: bash
      continue-on-error: true

    - name: OpenTofu PR Message
      uses: 'mshick/add-pr-comment@v2'
      with:
        refresh-message-position: true
        message-id: ${{ github.event.pull_request.id }}-PLAN
        message: |
          ### 🚀 OpenTofu Plan Output
          The OpenTofu plan has been successfully generated. Click below to view the details:
          <details>
          <summary>🔍 View OpenTofu Plan</summary>

          ```
          ${{ steps.plan.outputs.stdout }}
          ```

          </details>

          ${{ steps.plan.outputs.stderr && format('<details>\n  <summary>🔍 View OpenTofu Plan Stderr</summary>\n\n  ```\n  {0}\n  ```\n\n</details>', steps.plan.outputs.stderr) }}

          Deploy when it;s good, Kiddo! 🚀
        message-failure: |
          Errors detected in the OpenTofu plan step. Please check the logs for details.
    
    - name: Potential Failure        
      if: ${{ steps.validate.outputs.stderr || steps.plan.outputs.stderr }}
      run: |
        echo "Errors found in Validation Or Plan. Failing the job."
        echo ${{ steps.validate.outputs.stderr || steps.plan.outputs.stderr }}
        exit 1
      shell: bash